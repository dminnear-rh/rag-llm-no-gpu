global:
  embeddingModel: sentence-transformers/all-mpnet-base-v2

providers:
  qdrant:
    enabled:
      true
    deployment:
      image: qdrant/qdrant:latest
    service:
      port:
        6333
    jobEnv:
      - name: QDRANT_COLLECTION
        value: docs
      - name: QDRANT_URL
        value: http://qdrant-service:6333
    persistence:
      volumes:
        - name: data
          emptyDir: {}
        - name: snapshots
          emptyDir: {}
      volumeMounts:
        - name: data
          mountPath: /qdrant/storage
        - name: snapshots
          mountPath: /qdrant/snapshots

  redis:
    enabled:
      false
    deployment:
      image: redis/redis-stack-server:6.2.6-v19
    service:
      port:
        6379
    jobEnv:
      - name: REDIS_INDEX
        value: docs
      - name: REDIS_URL
        value: redis://redis-service:6379
    persistence:
      volumes:
        - name: data
          emptyDir: {}
      volumeMounts:
        - name: data
          mountPath: /data

  pgvector:
    enabled:
      false
    deployment:
      image: ankane/pgvector
      env:
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: pgvector-secret
              key: db
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: pgvector-secret
              key: user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pgvector-secret
              key: password
    service:
      port:
        5432
    jobEnv:
      - name: PGVECTOR_COLLECTION_NAME
        value: docs
      - name: PGVECTOR_URL
        valueFrom:
          secretKeyRef:
            name: pgvector-secret
            key: pgvector_url
    secrets:
      vault:
        fields:
          - user
          - password
          - db
        connectionString:
          key: pgvector_url
          template: postgresql+psycopg://{{ .user }}:{{ .password }}@pgvector-service:5432/{{ .db }}
    persistence:
      volumes:
        - name: data
          emptyDir: {}
        - name: run
          emptyDir: {}
      volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql
        - name: run
          mountPath: /var/run/postgresql

  elastic:
    enabled:
      false
    deployment:
      image: elasticsearch:8.11.1
      env:
        - name: discovery.type
          value: single-node
        - name: xpack.security.enabled
          value: "false"
        - name: ES_JAVA_OPTS
          value: -Xms512m -Xmx512m
        - name: ELASTIC_USER
          valueFrom:
            secretKeyRef:
              name: elastic-secret
              key: user
        - name: ELASTIC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: elastic-secret
              key: password
    service:
      port:
        9200
    jobEnv:
      - name: ELASTIC_INDEX
        value: docs
      - name: ELASTIC_URL
        value: http://elastic-service:9200
      - name: ELASTIC_USER
        valueFrom:
          secretKeyRef:
            name: elastic-secret
            key: user
      - name: ELASTIC_PASSWORD
        valueFrom:
          secretKeyRef:
            name: elastic-secret
            key: password
    secrets:
      vault:
        fields:
          - user
          - password
    persistence: {}

  mssql:
    enabled:
      false
    deployment:
      image: mcr.microsoft.com/mssql/rhel/server:2025-latest
      env:
        - name: ACCEPT_EULA
          value: "y"
        - name: MSSQL_SA_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mssql-secret
              key: sapassword
      containerSecurityContext:
        capabilities:
          add:
            - NET_BIND_SERVICE
    service:
      port:
        1433
    jobEnv:
      - name: MSSQL_TABLE
        value: docs
      - name: MSSQL_CONNECTION_STRING
        valueFrom:
          secretKeyRef:
            name: mssql-secret
            key: mssql_connection_string
    secrets:
      vault:
        fields:
          - sapassword
        connectionString:
          key: mssql_connection_string
          template: >-
            Driver={ODBC Driver 18 for SQL Server};
            Server=mssql-service,1433;
            Database=embeddings;
            UID=sa;
            PWD={{ .sapassword }};
            TrustServerCertificate=yes;
            Encrypt=no;
    persistence:
      volumes:
        - name: data
          emptyDir: {}
      volumeMounts:
        - name: data
          mountPath: /var/opt/mssql

vectorEmbedJob:
  image: quay.io/validatedpatterns/vector-embedder:latest

  backoffLimit: 10
  restartPolicy: Never

  tempDir: /tmp
  logLevel: info
  repoSources:
    - repo: https://github.com/RHEcosystemAppEng/llm-on-openshift.git
      globs:
        - examples/notebooks/langchain/rhods-doc/*.pdf
  webSources:
    - https://ai-on-openshift.io/getting-started/openshift/
    - https://ai-on-openshift.io/getting-started/opendatahub/
    - https://ai-on-openshift.io/getting-started/openshift-ai/
    - https://ai-on-openshift.io/odh-rhoai/configuration/
    - https://ai-on-openshift.io/odh-rhoai/custom-notebooks/
    - https://ai-on-openshift.io/odh-rhoai/nvidia-gpus/
    - https://ai-on-openshift.io/odh-rhoai/custom-runtime-triton/
    - https://ai-on-openshift.io/odh-rhoai/openshift-group-management/
    - https://ai-on-openshift.io/tools-and-applications/minio/minio/
  chunking:
    size: 1024
    overlap: 40
